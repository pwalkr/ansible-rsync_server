---
- hosts: client
  vars:
    rss_server: server
    client_name: testapp
  tasks:
    - name: Update client known_hosts (call per-client in an initial setup play)
      include_role:
        name: rsync_server
        tasks_from: keyscan.yml
      vars:
        rss_server: server

    - include_role:
        name: rsync_server
        tasks_from: client.yml

    - name: Seed client with data to backup
      file:
        path: /opt/testapp
        state: directory
    - copy:
        content: 'test'
        dest: /opt/testapp/data

    - name: Test typical backups push
      command: 'rsync --archive --delete -e="ssh -i ~/.ssh/testapp" /opt/testapp/ rsync://root@server/testapp/'

    - name: Remove client app to test restore
      file:
        path: /opt/testapp
        state: absent

    - name: Test typical restore-sync for initial data population
      include_role:
        name: rsync_server
        tasks_from: sync.yml
      vars:
        src: /
        dest: /opt/testapp/

    - name: Trying to pull root should return list of modules
      command: 'rsync --archive --delete -e="ssh -i ~/.ssh/testapp" rsync://root@server/ /opt/testapp/'
      register: authorized
      failed_when: authorized.stdout is not match("^testapp\s*$")

    - name: Verify paths outside the client module are not accessible
      command: 'rsync --archive --delete -e="ssh -i ~/.ssh/testapp" rsync://root@server/{{ item }} /opt/testapp/'
      register: authorized
      failed_when: authorized.rc == 0
      loop:
        - 'etc/'
        - '../'
        - 'testapp/../testapp/'
        - 'testapp/../../../etc/'
